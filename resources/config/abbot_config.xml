<?xml version="1.0" encoding="UTF-8"?>
<abbot xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:wxsl="http://www.w3.org/1999/XSL/Transform2" version="2.0" exclude-result-prefixes="#all"
   xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:teix="http://www.tei-c.org/ns/Examples"
   xmlns:rng="http://relaxng.org/ns/structure/1.0"
   xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
   xmlns:tei="http://www.tei-c.org/ns/1.0">

   <sitemap file="context://config/abbot_config.xml" date="2012-02-29">

      <transformations default="custom-transformation" loggingType="XPath">

         <default-transformations>
            <!-- Default transformations are located directly in the Abbot meta-stylesheet -->
         </default-transformations>

         <custom-transformations>

            <transformation type="xslt" activate="yes">
               <desc>adfghfghfgh</desc>
               <xsl:template match="floatext" priority="1">
                  <xsl:element name="div" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="./@*">
                        <xsl:choose>
                           <xsl:when test="name() ='lang'">
                              <xsl:attribute name="xml:lang">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:attribute name="{name()}">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:for-each>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add 'div' around 'stage' where lacking</desc>
               <xsl:template match="stage[preceding-sibling::*[1][name()='sp' or name()='stage']]"
                  priority="1">
                  <xsl:element name="div" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:element name="stage" namespace="http://www.tei-c.org/ns/1.0">
                        <xsl:copy-of select="@*"/>
                        <xsl:apply-templates/>
                     </xsl:element>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add 'div' element around 'sp' where lacking</desc>
               <xsl:template match="sp[not(parent::div)]" priority="1">
                  <xsl:element name="div" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:element name="sp" namespace="http://www.tei-c.org/ns/1.0">
                        <xsl:copy-of select="@*"/>
                        <xsl:apply-templates/>
                     </xsl:element>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add required @scheme attibute to 'keywords'</desc>
               <xsl:template match="keywords[not(@scheme)]" priority="1">
                  <xsl:element name="{name()}" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:copy-of select="@*"/>
                     <xsl:attribute name="scheme">lcsh</xsl:attribute>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>removes redundant 'closer' around 'postscript'</desc>
               <xsl:template match="closer[child::postscript]" priority="1">
                  <xsl:apply-templates/>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add missing @ident to 'language'</desc>
               <xsl:template match="language[not(@ident)]" priority="1">
                  <xsl:element name="language" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:copy-of select="@*"/>
                     <xsl:attribute name="ident">
                        <xsl:value-of select="."/>
                     </xsl:attribute>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>convert note @anchored to boolean true-false</desc>
               <xsl:template match="note" priority="1">
                  <xsl:element name="note" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="./@*">
                        <xsl:choose>
                           <xsl:when test="name() ='anchored'">
                              <xsl:attribute name="{name()}">
                                 <xsl:value-of
                                    select="if (lower-case(.) = 'yes') then 'true' else 'false'"/>
                              </xsl:attribute>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:attribute name="{name()}">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:for-each>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>edit the gap element</desc>
               <xsl:template match="*[lower-case(name())='gap']" priority="1">
                  <xsl:variable name="gap_firstPass">
                     <xsl:choose>
                        <xsl:when test="lower-case(@extent)='1span'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@desc)='duplicate'"/>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='replacement'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='symbol'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="reason">symbol</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='music'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="reason">music</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='intruder'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='lang=ara'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='math'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="reason">math</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="reason">blank</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 or more pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 + pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 pages +' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='a few words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='half a line' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='remainder of note' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='several letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='duplicate'"/>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='intruder'"/>
                        <xsl:when
                           test="lower-case(@extent)='1 letter' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='1+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='11 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='12 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">12</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='12 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='13 letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">13</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='13 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">13</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='13 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='14 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='15 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='2 letter' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='2 letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2+ letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='20 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='22 letters' and lower-case(@desc)='illegible'"/>
                        <xsl:when
                           test="lower-case(@extent)='25 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='26 letters' and lower-case(@desc)='illegible'"/>
                        <xsl:when
                           test="lower-case(@extent)='26 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='3 letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 letters' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='3+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 letters' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='4+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='45 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='47 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='5 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='5 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='5+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='6+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='7 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">7</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='7 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='8 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='8 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">8</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='8+ letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">8</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='9 letters' and lower-case(@desc)='symbol'"/>
                        <xsl:when
                           test="lower-case(@extent)='9 letters' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">letter</xsl:attribute>
                              <xsl:attribute name="extent">9</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 line' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 line' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 line' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ lines' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='11 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">11</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='12 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">12</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='13 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">13</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='14 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">14</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='15 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">15</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='15 lines' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">15</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='17 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">17</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='18 lines' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">18</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 lines' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='5 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='7 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">7</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='8 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">8</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='9 lines' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">line</xsl:attribute>
                              <xsl:attribute name="extent">9</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 note' and lower-case(@desc)='illegible'"/>
                        <xsl:when
                           test="lower-case(@extent)='1 number' and lower-case(@desc)='illegible'"/>
                        <xsl:when
                           test="lower-case(@extent)='0.5 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 page' and lower-case(@desc)='intruder'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 page' and lower-case(@desc)='replacement'"/>
                        <xsl:when
                           test="lower-case(@extent)='1 page' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 page' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 page' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ page' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='1+ pages'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='11 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">11</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='12 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">12</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='13 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">13</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='139 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">139</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='14 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">14</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='142+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">142</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='15 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">15</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='16 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">16</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='17 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">17</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='18 pages' and lower-case(@desc)='intruder'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">18</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='18 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">18</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='191 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">191</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='2 pages'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='2+ pages'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 pages' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 page' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='20 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">20</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='207 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">207</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='21+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">21</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 pages' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='30 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">30</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='32 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">32</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='36 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">36</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 pages' and lower-case(@desc)='duplicate'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='400+ pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">400</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='5 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='50 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">50</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='53 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">53</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='62 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">62</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='7 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">7</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='8 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">8</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='88 pages' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">page</xsl:attribute>
                              <xsl:attribute name="extent">88</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 paragraph' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragraph</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 paragraph' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragraph</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 paragraph' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragraph</xsl:attribute>
                              <xsl:attribute name="reason">blank</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ paragraphs' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragrah</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 paragraphs' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragraph</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 span' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='1 span' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="reason">blank</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 span' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 span' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 sspan' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='several words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 word' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 word' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='1 word' and lower-case(@desc)='blank'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="reason">blank</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1 word' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ word' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='1+ words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='10 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">10</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='11 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">11</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='12 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">12</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='15 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">15</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='16 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">16</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='17 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">17</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='19 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">19</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2 words' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='2+ words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">2</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='3+ words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">3</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='4 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">4</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='5 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='5 words' and lower-case(@desc)='foreign'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="reason">foreign</xsl:attribute>
                              <xsl:attribute name="extent">5</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='6+ words' and lower-case(@desc)='missing'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">6</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='7 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">7</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='8 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">8</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when
                           test="lower-case(@extent)='9 words' and lower-case(@desc)='illegible'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">word</xsl:attribute>
                              <xsl:attribute name="extent">9</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='1'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='2'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='3'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">unknown</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='note'"/>
                        <xsl:when test="lower-case(@extent)='para'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">paragraph</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="lower-case(@extent)='span'">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each
                                 select="./@*[lower-case(name()) != 'extent'][lower-case(name()) != 'desc'][lower-case(name()) != 'disp'][lower-case(name()) != 'resp'][lower-case(name()) != 'ms']">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="."/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:attribute name="unit">span</xsl:attribute>
                              <xsl:attribute name="extent">1</xsl:attribute>
                           </xsl:element>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each select="./@*">
                                 <xsl:attribute name="{lower-case(name())}">
                                    <xsl:value-of select="lower-case(.)"/>
                                 </xsl:attribute>
                              </xsl:for-each>
                              <xsl:apply-templates/>
                           </xsl:element>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>

                  <xsl:for-each select="$gap_firstPass//gap">
                     <xsl:choose>
                        <xsl:when test="contains(@extent,' ')">
                           <xsl:element name="gap" namespace="http://www.tei-c.org/ns/1.0">
                              <xsl:for-each select="@extent">
                                 <xsl:choose>
                                    <xsl:when test="contains(.,' ')">
                                       <xsl:attribute name="extent">
                                          <xsl:value-of select="replace(.,' ','_')"/>
                                       </xsl:attribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                       <xsl:copy-of select="." copy-namespaces="no"/>
                                    </xsl:otherwise>
                                 </xsl:choose>
                              </xsl:for-each>
                              <xsl:apply-templates/>
                           </xsl:element>
                        </xsl:when>
                        <xsl:when test="@unit='letter'">
                           <xsl:call-template name="forLoop">
                              <xsl:with-param name="loopNumber">1</xsl:with-param>
                              <xsl:with-param name="counterNumber">
                                 <xsl:value-of select="@extent"/>
                              </xsl:with-param>
                           </xsl:call-template>
                           <xsl:if test="@plus">
                              <!-- not needed for now...<xsl:value-of select="$plusCharacterIndicatingUnknownLength"/>-->
                           </xsl:if>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:copy-of select="." copy-namespaces="no"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:for-each>

               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>process the div element</desc>
               <xsl:template match="*[not(@type)][starts-with(lower-case(name()),'div')]"
                  priority="1">
                  <xsl:element name="div" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="./@*">
                        <xsl:attribute name="{lower-case(name())}">
                           <xsl:value-of select="."/>
                        </xsl:attribute>
                     </xsl:for-each>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>process the root element</desc>
               <xsl:template match="*[not(parent::*)]" priority="1">
                  <xsl:processing-instruction name="xml-model">
                     <xsl:text>href="http://abbot.unl.edu/tei_all.rng"</xsl:text>
                  </xsl:processing-instruction>
                  <TEI xmlns="http://www.tei-c.org/ns/1.0">
                     <xsl:choose>
                        <xsl:when test="@n or @id">
                           <xsl:attribute name="xml:id">
                              <xsl:value-of select="@n | @id"/>
                           </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise/>
                     </xsl:choose>
                     <xsl:apply-templates/>
                  </TEI>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>suppress 'idg' element</desc>
               <xsl:template match="*[lower-case(name())='idg']" priority="1"/>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>suppress 'idno' element</desc>
               <xsl:template match="*[lower-case(name())='idno']" priority="1"/>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>substitute 'floatingText' element for 'letter' element</desc>
               <xsl:template match="*[lower-case(name())='letter']" priority="1">
                  <xsl:element name="floatingText" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:attribute name="type">letter</xsl:attribute>
                     <xsl:element name="body" namespace="http://www.tei-c.org/ns/1.0">
                        <xsl:apply-templates/>
                     </xsl:element>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>correct attributes on 'milestone'</desc>
               <xsl:template match="milestone" priority="1">
                  <xsl:element name="milestone" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:if test="@n">
                        <xsl:attribute name="n">
                           <xsl:value-of select="@n"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:choose>
                        <xsl:when test="@unit">
                           <xsl:attribute name="unit">
                              <xsl:value-of select="replace(replace(@unit, '[-�,]', '_'),' ','_')"
                              />
                           </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:attribute name="unit">unknown</xsl:attribute>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>suppress 'p' tags in several contexts</desc>
               <xsl:template match="p" priority="1">
                  <xsl:choose>
                     <xsl:when test="ancestor::cell">
                        <xsl:element name="seg" namespace="http://www.tei-c.org/ns/1.0">
                           <xsl:attribute name="type">p</xsl:attribute>
                           <xsl:apply-templates/>
                        </xsl:element>
                     </xsl:when>
                     <xsl:when test="child::text">
                        <xsl:apply-templates/>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:element name="p" namespace="http://www.tei-c.org/ns/1.0">
                           <xsl:for-each select="attribute::*">
                              <xsl:choose>
                                 <xsl:when test="name()='TEIform'"/>

                                 <xsl:when test="name()='id'">
                                    <xsl:attribute name="xml:id">
                                       <xsl:value-of select="."/>
                                    </xsl:attribute>
                                 </xsl:when>

                                 <xsl:otherwise>
                                    <xsl:attribute name="{lower-case(name())}">
                                       <xsl:value-of select="."/>
                                    </xsl:attribute>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:for-each>
                           <xsl:apply-templates/>
                        </xsl:element>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace 'sup' with hi@rend='sup'</desc>
               <xsl:template match="sup" priority="1">
                  <xsl:element name="hi" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:attribute name="rend">sup</xsl:attribute>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace tailnote with 'note' @type='tail'</desc>
               <xsl:template match="tailnote" priority="1">
                  <xsl:element name="note" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:choose>
                        <xsl:when test="lower-case(name())='tailnote'">
                           <xsl:attribute name="type">tail</xsl:attribute>
                        </xsl:when>
                     </xsl:choose>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace headnote with 'note' @type='head'</desc>
               <xsl:template match="headnote" priority="1">
                  <xsl:element name="note" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:choose>
                        <xsl:when test="lower-case(name())='headnote'">
                           <xsl:attribute name="type">head</xsl:attribute>
                        </xsl:when>
                     </xsl:choose>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>correct @type attributes containing illegal characters</desc>
               <xsl:template
                  match="*[@type][parent::*][not(starts-with(lower-case(name()),'float'))]"
                  priority="2">
                  <xsl:variable name="elementName">
                     <xsl:choose>
                        <!--<xsl:when test="starts-with(lower-case(name()),'float')">
                           <xsl:text>div</xsl:text>
                        </xsl:when>-->
                        <xsl:when test="starts-with(lower-case(name()),'div')">
                           <xsl:text>div</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="name()"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:element name="{$elementName}" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="@*">
                        <xsl:choose>
                           <xsl:when test="lower-case(name())='type'">
                              <!-- #### -->
                              <!-- Begin handling of @type attributes that are required to conform to the XML names specification. -->
                              <!-- #### -->
                              <xsl:attribute name="type">
                                 <xsl:choose>
                                    <xsl:when test="matches(.,'[_:A-Za-z]')">
                                       <xsl:analyze-string select="." regex="[_:\-\.0-9a-zA-Z]+">
                                          <xsl:matching-substring>
                                             <xsl:value-of select="."/>
                                          </xsl:matching-substring>
                                          <xsl:non-matching-substring>
                                             <xsl:text>_</xsl:text>
                                          </xsl:non-matching-substring>
                                       </xsl:analyze-string>
                                    </xsl:when>
                                    <xsl:otherwise>
                                       <xsl:text>_</xsl:text>
                                       <xsl:analyze-string select="." regex="[_:\-\.0-9a-zA-Z]+">
                                          <xsl:matching-substring>
                                             <xsl:value-of select="."/>
                                          </xsl:matching-substring>
                                          <xsl:non-matching-substring>
                                             <xsl:text>_</xsl:text>
                                          </xsl:non-matching-substring>
                                       </xsl:analyze-string>
                                    </xsl:otherwise>
                                 </xsl:choose>
                              </xsl:attribute>
                              <!-- #### -->
                              <!-- End handling of @type attributes that are required to conform to the XML names specification. -->
                              <!-- #### -->
                           </xsl:when>
                           <xsl:when test="lower-case(name())='i2'"/>
                           <xsl:when test="lower-case(name())='lang'">
                              <xsl:attribute name="xml:lang">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:copy-of select="." copy-namespaces="no"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:for-each>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace head tags with label tags for children of headnotes and tailnotes in
                  ECCO</desc>
               <xsl:template match="head[parent::headnote | parent::tailnote]" priority="1">
                  <xsl:element name="label" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add 'text' parent to 'group' elements that lack them</desc>
               <xsl:template match="group[not(parent::text)]" priority="1">
                  <xsl:element name="text" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:element name="group" namespace="http://www.tei-c.org/ns/1.0">
                        <xsl:apply-templates/>
                     </xsl:element>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>convert @ref attributes to @facs attribute in ECCO texts</desc>
               <xsl:template match="pb" priority="1">
                  <xsl:element name="pb" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="@*">
                        <xsl:choose>
                           <xsl:when test="lower-case(name())='ref'">
                              <xsl:attribute name="facs">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:when>
                           <xsl:when test="lower-case(name())='n'">
                              <xsl:attribute name="n">
                                 <xsl:value-of select="."/>
                              </xsl:attribute>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:copy-of select="." copy-namespaces="no"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:for-each>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>remove list[parent::signed] where it may not occur in TCP texts</desc>
               <xsl:template match="list[parent::signed]" priority="1">
                  <xsl:for-each select=".">
                     <xsl:value-of select="."/>
                     <xsl:text/>
                  </xsl:for-each>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace @lang with @xml:lang for 'foreign' tags</desc>
               <xsl:template match="foreign" priority="1">
                  <xsl:element name="foreign" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:for-each select="@lang">
                        <xsl:attribute name="xml:lang">
                           <xsl:value-of select="."/>
                        </xsl:attribute>
                     </xsl:for-each>
                     <xsl:value-of select="."/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>replace 'orig' with value of @reg in EAF collection</desc>
               <xsl:template match="orig" priority="1">
                  <xsl:variable name="currentRegValue">
                     <xsl:value-of select="@reg"/>
                  </xsl:variable>
                  <xsl:variable name="followingOrigValue">
                     <xsl:value-of select="following-sibling::orig[1][not(@reg)]"/>
                  </xsl:variable>
                  <xsl:choose>
                     <xsl:when
                        test="ends-with($currentRegValue,$followingOrigValue) and @reg and not(string-length($followingOrigValue)=0)"/>
                     <xsl:when test="not(@reg)">
                        <xsl:value-of select="preceding-sibling::orig[1][@reg]/@reg"/>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:if test="child::lb">
                           <xsl:element name="lb" namespace="http://www.tei-c.org/ns/1.0"/>
                        </xsl:if>
                        <xsl:value-of select="@reg"/>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>substitute 'quote' tag for 'q' tag</desc>
               <xsl:template match="q | Q" priority="1">
                  <xsl:element name="quote" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>retain 'abbr'</desc>
               <xsl:template match="abbr" priority="1">
                  <xsl:element name="abbr" namespace="http://www.tei-c.org/ns/1.0">
                     <xsl:copy-of select="@*" copy-namespaces="no"/>
                     <xsl:apply-templates/>
                  </xsl:element>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>add 'change' in revisionDesc</desc>
               <xsl:template match="teiHeader | teiheader" priority="1">
                  <teiHeader xmlns="http://www.tei-c.org/ns/1.0">
                     <xsl:copy-of select="@*"/>
                     <xsl:apply-templates/>
                     <xsl:element name="revisionDesc" xmlns="http://www.tei-c.org/ns/1.0">
                        <xsl:element name="change" xmlns="http://www.tei-c.org/ns/1.0">
                           <xsl:attribute name="when">
                              <xsl:value-of select="current-date()"/>
                           </xsl:attribute>
                           <xsl:element name="name" xmlns="http://www.tei-c.org/ns/1.0">
                              <xsl:attribute name="xml:id">bpz</xsl:attribute>Pytlik Zillig,
                              B.</xsl:element> Conversion to TEI by Abbot</xsl:element>
                     </xsl:element>
                  </teiHeader>
               </xsl:template>
            </transformation>

            <transformation type="xslt" activate="yes">
               <desc>convert 'text' element of quoted text to 'floatingText'</desc>
               <xsl:template match="text" priority="1">
                  <xsl:choose>
                     <xsl:when test="ancestor::text and parent::q">
                        <xsl:element name="floatingText" namespace="http://www.tei-c.org/ns/1.0">
                           <xsl:if test="descendant::body/*[starts-with(name(),'div')]/@type">
                              <xsl:attribute name="type">
                                 <xsl:choose>
                                    <xsl:when
                                       test="matches(translate(descendant::body[1]/*[starts-with(name(),'div')][1]/@type,&#34;'&#34;,''),'[_:A-Za-z]')">
                                       <xsl:analyze-string
                                          select="translate(descendant::body[1]/*[starts-with(name(),'div')][1]/@type,&#34;'&#34;,'')"
                                          regex="[_:\-\.0-9a-zA-Z]+">
                                          <xsl:matching-substring>
                                             <xsl:value-of select="."/>
                                          </xsl:matching-substring>
                                          <xsl:non-matching-substring>
                                             <xsl:text>_</xsl:text>
                                          </xsl:non-matching-substring>
                                       </xsl:analyze-string>
                                    </xsl:when>
                                    <xsl:otherwise>
                                       <xsl:text>_</xsl:text>
                                       <xsl:analyze-string
                                          select="translate(descendant::body/*[starts-with(name(),'div')][1]/@type,&#34;'&#34;,'')"
                                          regex="[_:\-\.0-9a-zA-Z]+">
                                          <xsl:matching-substring>
                                             <xsl:value-of select="."/>
                                          </xsl:matching-substring>
                                          <xsl:non-matching-substring>
                                             <xsl:text>_</xsl:text>
                                          </xsl:non-matching-substring>
                                       </xsl:analyze-string>
                                    </xsl:otherwise>
                                 </xsl:choose>
                              </xsl:attribute>
                           </xsl:if>
                           <!--begin choose that decides whether to add a child 'body' element to
                     floatingText-->
                           <xsl:choose>
                              <xsl:when test="child::body">
                                 <xsl:apply-templates/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:element name="body" namespace="http://www.tei-c.org/ns/1.0">
                                    <xsl:apply-templates/>
                                 </xsl:element>
                              </xsl:otherwise>
                           </xsl:choose>
                           <!--end choose that decides whether to add a child 'body' element to
                     floatingText-->
                        </xsl:element>
                     </xsl:when>
                     <xsl:when test="ancestor::text and not(ancestor::group)">
                        <xsl:element name="floatingText" namespace="http://www.tei-c.org/ns/1.0">
                           <xsl:if test="@useAttributeForFloatingText">
                              <xsl:attribute name="type">
                                 <xsl:value-of
                                    select="replace(@useAttributeForFloatingText,' ','_')"/>
                              </xsl:attribute>
                           </xsl:if>
                           <!--begin choose that decides whether to add a child 'body' element to
                     floatingText-->
                           <xsl:choose>
                              <xsl:when test="child::body">
                                 <xsl:apply-templates/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:element name="body" namespace="http://www.tei-c.org/ns/1.0">
                                    <xsl:apply-templates/>
                                 </xsl:element>
                              </xsl:otherwise>
                           </xsl:choose>
                           <!--end choose that decides whether to add a child 'body' element to
                     floatingText-->
                        </xsl:element>
                     </xsl:when>
                     <xsl:otherwise>
                        <xsl:element name="text" namespace="http://www.tei-c.org/ns/1.0">
                           <xsl:choose>
                              <xsl:when test="@lang">
                                 <xsl:attribute name="xml:lang">
                                    <xsl:value-of select="lower-case(@lang)"/>
                                 </xsl:attribute>
                              </xsl:when>
                           </xsl:choose>
                           <xsl:apply-templates/>
                        </xsl:element>
                     </xsl:otherwise>
                  </xsl:choose>
               </xsl:template>
            </transformation>

         </custom-transformations>
      </transformations>
   </sitemap>
</abbot>
